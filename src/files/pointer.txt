№1 Что такое указатель?
1) Память
2) Область памяти
3) Адрес области памяти
4) Переменная, которая хранит в себе адрес области памяти
№2) Как выглядит объявление указателя?
1) <тип> $<имя>;
2) <тип> &<имя>;
3) <тип> <имя>;
4) <тип> *<имя>;
№3) Укажите оператор взятия адреса
1) #
2) $
3) *
4) &
№4) Укажите оператор разыменования
1) #
2) $
3) &
4) *
№5) Равны ли размеры указателей, которые указывают на разные типы данных
1) Зависит от архитектуры компьютера
2) Зависит от типа данных
3) Не равны
4) Равны
№6) Что такое тип указателя? 
1) Адрес указателя
2) Адрес который хранит в себе указатель
3) Какого типа значения можно заносить в переменную
4) Тип переменной, адрес которой он содержит
№7) Как Вы охарактеризуете строку кода "char c;"?
1) Разыменование
2) Взятие адреса
3) Объявление указателя
4) Объявление переменной
№8) Как Вы охарактеризуете строку кода "char *c;"?
1) Разыменование
2) Взятие адреса
3) Объявление переменной
4) Объявление указателя
№9) Как Вы охарактеризуете строку кода "p=&c;"?
1) Разыменование
2) Взятие
3) Объявление переменной
4) В переменную p заносится адрес переменной c
№10) Какие типы указателей поддерживаются в C++?
1) Связные и рванные
2) Регулируемые и нерегулируемые
3) Адресные и Ссылочные
4) Управляемые и неуправляемые
№11) Для чего нужно gcnew?
1) Выделяет память из "кучи"
2) Чтобы было
3) Тот же new, просто в новом стандарте так надо писать
4) Выделяет память для экземпляра объекта и возвращает ссылку на этот объект
№12) Что такое управляемые указатели?
1) указатель, которым можно управлять
2) абстракция, а так тоже самое, что обычный указатель
3) Нет таких указателей
4) Указатели ссылочного типа
№13) Какой символ используется для управляемых указателей
1) Не существует управляемых указателей
2) &
3) *
4) ^
№14) Как выглядит объявление указателя на функцию?
1) *тип (имя_функции) (список_параметров);
2) *имя_функции (список_параметров);
3) тип (имя_функции) (список_параметров);
4) тип * (имя_функции) (список_параметров);
№15) Какие типы указателей не поддерживаются в С++?
1) Управляемые
2) Неуправляемые
3) Неуправляемые указатели на функции
4) Управляемые указатели на функции
№16) Что такое косвенный доступ?
1) Доступ через оператор new
2) Обращение в функции к глобальной переменной
3) Доступ к статической переменной
4) Доступ к переменной с использованием указателя
№17) Какие арифмитические действия нельзя совершать с указателями?
1) +
2) -
3) /
4) Все из перечисленных можно
№18) Можно ли использовать операторы сравнения с указателями?
1) Только с указателями одного типа
2) Не знаю
3) Нет
4) Да
№19) Можно ли использовать указатель типа void?
1) Можно, только после подключения библиотеки math.h 
2) Не знаю
3) Нельзя
4) Можно
№20) Какой тип возвращает malloc();
1) int
2) int *
3) void
4) void *
№21) У чего нет адреса?
1) У переменной типа int
2) У переменной типа void
3) У указателя на тип void
4) У константы
№22) Можно ли указателю присвоить физический адрес?
1) Нельзя
2) Можно
3) Не знаю
4) Можно, но нельзя обращаться к адресу
№23) Чем является имя массива? 
1) Конструктором
2) Указатель на последний элемент в массиве
3) Указатель на массив
4) Указатель на первый элемент в массиве
24) Можно ли обращатсья к элементу массива как *(A+n)?
1) Только в С++ можно
2) Не знаю
3) Нельзя
4) Можно
№25) Как нельзя обратиться к нулевой строке двумерного массива?
1) (int *)&M[0]; 
2) (int *)M[0]; 
3) (int *)M;
4) *M[0]
№26) Как можно изменять элементы строки?
1) Можно прямо изменять в массиве символов
2) Не знаю, т.к. работаю с классом string
3) C помощью указателя на тип int
4) C помощью указателя на символов в массиве символов
№27) Как нельзя обратиться к n-ому элементу массива?
1) A[n]
2) *(A+n)
3) *(&A[n-1]+1)
4) *(A[n-1]+1)
№28) Что нельзя создать с помощью указателей из перечисленного?
1) Связанный список
2) Рванный массив
3) Динамический массив
4) Класс
№29) Какую библиотеку нужно подключать, чтобы работали указатели?
1) stdio.h
2) malloc.h
3) iostream
4) Никакую
№30) Какое из нижеприведённых примеров неверно написано?
1) int *a=5;
2) int a=5;
3) int *a;
4) *int a;